import numpy as np
import algorand as algo
from controller import Controller
import parameters as params
from copy import deepcopy

def main():

    template = [30, 5, 0.33, 10, 0]

    n_users_vals = range(20, 51, 5)
    n_traitors_vals = range(0, 17, 4)
    traitor_stake_vals = [float(x) for x in np.concatenate([np.arange(0, 0.33, 0.06), np.array([0.33, 0.34])])]
    tau_step_vals = range(5, 21, 5)
    block_size_vals = [float(x) for x in np.concatenate([np.array([0.]), np.logspace(start=0, stop=10, num=11, base=2)])]

    value_lists = [n_users_vals, n_traitors_vals, traitor_stake_vals, tau_step_vals, block_size_vals]

    for i in range(5):
        values = deepcopy(template)
        for val in value_lists[i]:
            values[i] = val
            for _ in range(3):
                n_users, n_traitors, traitor_stake, params.tau_step, block_size = values
                params.tau_final = params.tau_step
                output(n_users, n_traitors, traitor_stake, params.tau_step, block_size)

                context = algo.initial_context()
                ps = new(algo.User, num=n_users)
                ctrl = new(Controller, (ps, params.lambda_block, context, n_traitors, traitor_stake, False, True, None, block_size))

                users_list = list(ps)
                for p in ps:
                    neighbours_set = algo.create_gossip_neighbours(users_list, p)
                    setup(p, (neighbours_set, ctrl, context, True, block_size))
                start(ps)
                start(ctrl)
                await(received(('done',), from_=ctrl))
