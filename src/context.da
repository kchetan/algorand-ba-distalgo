# https://people.csail.mit.edu/nickolai/papers/gilad-algorand-eprint.pdf
# The Context metadata is Implemented as per section 7.1 in the paper.
from H import H

class Context():
    def __init__(self):
        self.__last_block = None
        self.__first_block = None
        self.__final_fork = False
        self.__block_of_hash = dict()
        self.__chain = []

    def add_block(self, block):
        if(not self.__last_block):
            self.__first_block = block
        self.__last_block = block
        self.__chain.append(block)
        self.__block_of_hash[H(block)] = block

    def prev_block(self):
        return self.__last_block

    def add_fork(self, blocks: set):
        self.__chain.append(blocks)
        self.__final_fork = True

    def is_forked(self):
        return self.__final_fork

    def get_chain(self):
        return self.__chain